import streamlit as st
import sys
import os
import importlib.util
from datetime import datetime
try:
    import pypdf  # Alternative moderne √† PyPDF2
except ImportError:
    st.error("Veuillez installer pypdf : pip install pypdf")
    st.stop()
from io import BytesIO

# -------------------- Import utils --------------------
UTILS_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "utils.py"))
spec = importlib.util.spec_from_file_location("utils", UTILS_PATH)
utils = importlib.util.module_from_spec(spec)
spec.loader.exec_module(utils)

# -------------------- Init session --------------------
utils.init_session_state()

# Initialiser les variables manquantes
defaults = {
    "annonces": [],
}
for k, v in defaults.items():
    if k not in st.session_state:
        st.session_state[k] = v

# -------------------- Page config --------------------
st.set_page_config(
    page_title="TG-Hire IA - Annonces",
    page_icon="üì¢",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title("üì¢ Gestion des annonces")

# -------------------- Ajout d'une annonce --------------------
st.subheader("‚ûï Ajouter une annonce")

# Choix de la plateforme
plateforme = st.selectbox("Plateforme cible", ["JOBZYN", "TGCC"], key="annonce_plateforme")

# Mode d'entr√©e : PDF ou manuel
input_mode = st.radio("Mode d'entr√©e des infos du poste", ["Upload PDF fiche de poste", "Saisie manuelle"], key="input_mode")

fiche_text = ""

if input_mode == "Upload PDF fiche de poste":
    uploaded_file = st.file_uploader("T√©l√©chargez la fiche de poste (PDF)", type="pdf", key="pdf_upload")
    if uploaded_file:
        try:
            pdf_reader = pypdf.PdfReader(BytesIO(uploaded_file.read()))
            fiche_text = ""
            for page in pdf_reader.pages:
                fiche_text += page.extract_text() + "\n"
            st.success("PDF extrait avec succ√®s !")
        except Exception as e:
            st.error(f"Erreur lors de l'extraction du PDF : {e}")
else:
    # Saisie manuelle : formulaire simple bas√© sur la check-list (s√©lection des indispensables + essentiels)
    st.subheader("Remplissez les infos cl√©s (bas√© sur la check-list LEDR)")
    
    col1, col2 = st.columns(2)
    
    with col1:
        salaire = st.text_input("Salaire")
        localisation = st.text_input("Localisation")
        type_contrat = st.text_input("Type de contrat + dur√©e")
        date_demarrage = st.text_input("Date de d√©marrage")
        objectif_poste = st.text_area("Objectif du poste")
        missions = st.text_area("Missions")
        competences = st.text_area("Comp√©tences")
        infos_entreprise = st.text_area("Infos sur l'entreprise")
        comment_postuler = st.text_input("Comment postuler")
        culture_valeurs = st.text_area("Culture, valeurs de l'entreprise")
        competences_hierarchisees = st.text_area("Comp√©tences hi√©rarchis√©es")
        
    with col2:
        contexte_recrutement = st.text_area("Contexte du recrutement")
        description_equipe = st.text_area("Description de l'√©quipe")
        presentation_manager = st.text_area("Pr√©sentation du manager")
        position_hierarchique = st.text_input("Position hi√©rarchique")
        responsabilites_autonomie = st.text_area("Les responsabilit√©s / l'autonomie")
        contact_recruteur = st.text_input("Le contact direct de la personne en charge du recrutement")
        processus_recrutement = st.text_area("Processus de recrutement")
        conditions_reussite = st.text_area("Conditions de r√©ussite")
        criteres_recrutement = st.text_area("Expliquer ses crit√®res de recrutement")
        evolution_missions = st.text_area("√âvolution √† court/moyen terme sur les missions du poste")
        parcours_carriere = st.text_area("Parcours de carri√®re et de formation de l'entreprise")

    fiche_text = f"""
    Salaire: {salaire}
    Localisation: {localisation}
    Type de contrat + dur√©e: {type_contrat}
    Date de d√©marrage: {date_demarrage}
    L'objectif du poste: {objectif_poste}
    Missions: {missions}
    Comp√©tences: {competences}
    Infos sur l'entreprise: {infos_entreprise}
    Comment postuler: {comment_postuler}
    Culture, valeurs de l'entreprise: {culture_valeurs}
    Comp√©tences hi√©rarchis√©es: {competences_hierarchisees}
    Contexte du recrutement: {contexte_recrutement}
    Description de l'√©quipe: {description_equipe}
    Pr√©sentation du manager: {presentation_manager}
    Position hi√©rarchique: {position_hierarchique}
    Les responsabilit√©s / l'autonomie: {responsabilites_autonomie}
    Le contact direct de la personne en charge du recrutement: {contact_recruteur}
    Processus de recrutement: {processus_recrutement}
    Conditions de r√©ussite: {conditions_reussite}
    Expliquer ses crit√®res de recrutement: {criteres_recrutement}
    √âvolution √† court/moyen terme sur les missions du poste: {evolution_missions}
    Parcours de carri√®re et de formation de l'entreprise: {parcours_carriere}
    """

# Check-list du PDF/screenshot (hardcod√©e pour l'int√©grer au prompt)
check_list = """
L'indispensable: Salaire, Localisation, Type de Contrat + dur√©e, Date de d√©marrage, L'objectif du poste, Missions, Comp√©tences, infos sur l'entreprise, Comment postuler
L'essentiel: Culture, valeurs de l'entreprise, Comp√©tences hi√©rarchis√©es, Contexte du recrutement, Description de l'√©quipe, Pr√©sentation du manager, Position hi√©rarchique, Les responsabilit√©s / l'autonomie, Le contact direct de la personne en charge du recrutement, Processus de recrutement
L'exceptionnel: Conditions de r√©ussite, Expliquer ses crit√®res de recrutement, √âvolution √† court/ moyen terme sur les missions du poste, Parcours de carri√®re et de formation de l'entreprise, Infos sur la carri√®re ou la formation des personnes AVANT ce poste, Infos sur les projets √† moyen, o√π long terme de l'√©quipe, L'accompagnement √† la prise de poste : pr√©-boarding et d'onboarding
"""

col1, col2 = st.columns(2)
with col1:
    titre = st.text_input("Titre de l'annonce", key="annonce_titre")
    poste = st.text_input("Poste concern√©", key="annonce_poste")
with col2:
    entreprise = st.text_input("Entreprise", key="annonce_entreprise")
    localisation_input = st.text_input("Localisation", key="annonce_loc")  # Peut √™tre overwrite par PDF/manuel

# Bouton pour g√©n√©rer via IA
if st.button("ü§ñ G√©n√©rer l'annonce via IA", type="secondary", use_container_width=True, key="btn_generer_annonce"):
    if fiche_text:
        # Prompt base
        prompt_base = f"Utilise cette check-list pour inclure un maximum d'infos pertinentes dans l'annonce : {check_list}\n\nBas√© sur cette fiche de poste : {fiche_text}\n\nG√©n√®re une annonce compl√®te pour le poste {poste} chez {entreprise} √† {localisation_input}."

        if plateforme == "JOBZYN":
            prompt = prompt_base + "\nRestrict-toi strictement √† ces blocs : Introduction au poste, Votre r√¥le, Votre √©quipe, Vos qualifications, Avantages, Processus de recrutement. Rends-la attractive et concise."
        else:  # TGCC
            prompt = prompt_base + """
CONTEXTE ET OBJECTIF
Tu es un expert en r√©daction d'annonces d'emploi qui doit cr√©er des annonces hautement attractives et efficaces bas√©es sur les meilleures pratiques du secteur. Ton objectif est de g√©n√©rer des annonces qui convertissent les lecteurs en candidats qualifi√©s.

R√àGLES FONDAMENTALES √Ä APPLIQUER
‚úÖ CE QU'IL FAUT FAIRE (Inspir√© de la bonne annonce) :

STRUCTURE OPTIMALE :

Titre accrocheur avec emoji ‚Üí "Exemple 2024 ‚Üí [Poste] ‚Äì [Entreprise] ‚Äì [Type de contrat] ‚Äì [Lieu]"

Informations cl√©s en haut : Entreprise, Localisation, Contrat, Date, Salaire

Accroche qui interpelle par des questions rh√©toriques sur les frustrations du m√©tier

Section "Pourquoi nous avons besoin de vous" avec contexte business

Section "Ce que vous ferez" avec missions d√©taill√©es

Section "Ce que l'on recherche" avec comp√©tences cl√©s et bonus

Section "Ce poste n'est pas pour vous si..." pour filtrer naturellement

Processus de recrutement transparent

TON ET STYLE :

Direct et authentique, comme une conversation

Utiliser "vous" pour s'adresser directement au candidat

Ton franc et transparent sur les d√©fis et avantages

Mise en valeur de l'autonomie et de la culture d'entreprise

CONTENU ENGAGEANT :

Expliquer la diff√©rence entre travailler ici et ailleurs

D√©crire l'environnement et l'√©quipe actuelle

Pr√©cision sur le management et les perspectives

‚ùå CE QU'IL FAUT ABSOLUMENT √âVITER (Erreurs courantes) :

NE PAS FAIRE UN SIMPLE DESCRIPTIF DE POSTE

Une annonce est une PUBLICIT√â, pas un document administratif

√âviter le jargon RH et les formulations bureaucratiques

NE PAS TROP RACCOURCIR

Une annonce courte perd son pouvoir de conviction

Le candidat a besoin d'informations concr√®tes pour d√©cider

NE PAS CHERCHER √Ä PLAIRE √Ä TOUT LE MONDE

Attirer, c'est accepter de repousser certaines personnes

Mentionner clairement les inconv√©nients et d√©fis

√âVITER LA LANGUE DE BOIS

Supprimer les termes √† g√©om√©trie variable : "taille humaine", "innovant", "responsable"

√âliminer les adjectifs vides de sens

Appliquer le test du "blab bla" : si on peut remplacer par "blab bla", supprimer

FAIRE ATTENTION √Ä LA FORME

√âviter les blocs de texte denses

Utiliser une hi√©rarchie claire : titres, listes, phrases courtes

V√©rifier que la plateforme conserve la mise en forme

STRUCTURE OBLIGATOIRE DE L'ANNONCE
TITRE ACCROCHEUR [Format standardis√©]

INFORMATIONS CL√âS [En haut, tr√®s visible]

ACCROCHE ENGAGEANTE [2-3 questions rh√©toriques]

POURQUOI NOUS AVONS BESOIN DE VOUS [Contexte business]

PR√âSENTATION DE L'ENTREPRISE [Culture, valeurs, sp√©cificit√©s]

CE QUE VOUS FEREZ [Missions quotidiennes + ponctuelles]

VOTRE ENVIRONNEMENT [√âquipe, management, culture]

CE QUE NOUS RECHERCHONS [Comp√©tences cl√©s + bonus]

CE POSTE N'EST PAS POUR VOUS SI... [Filtre naturel]

PROCESSUS DE RECRUTEMENT [√âtapes transparentes]

APPEL √Ä L'ACTION [Comment postuler]

EXEMPLE DE BONNE PRATIQUE √Ä REPRODUIRE
¬´ Fatigu√©¬∑e de devoir vous battre pour convaincre d'adopter des m√©thodes de recrutement efficaces ? Marre de ne pas avoir les outils n√©cessaires pour r√©ussir dans votre m√©tier ? ¬ª

¬´ Chez nous, vous n'aurez plus √† vous soucier de ces probl√®mes. ¬ª

¬´ Ce poste n'est pas pour vous si... vous aimez recruter au feeling ¬ª

DEMANDE SP√âCIFIQUE
Quand je te fournirai les informations sur un poste √† pourvoir, g√©n√®re une annonce compl√®te qui respecte scrupuleusement ces r√®gles. L'annonce doit √™tre pr√™te √† √™tre publi√©e et optimis√©e pour attirer les candidats id√©aux tout en filtrant naturellement les non-correspondants.

Ton expertise doit se concentrer sur :

La conversion des lecteurs en candidats qualifi√©s

L'authenticit√© et la transparence

La diff√©renciation par rapport aux annonces traditionnelles

L'optimisation pour les plateformes de recrutement. Rends-la authentique, transparente, avec accroche rh√©torique, filtre naturel, etc."""

        # Appel √† l'IA (assumez que utils.deepseek_generate existe)
        try:
            generated_contenu = utils.deepseek_generate(prompt)  # Remplacez par votre fonction r√©elle
            st.session_state["annonce_contenu"] = generated_contenu
            st.success("Annonce g√©n√©r√©e avec succ√®s !")
        except Exception as e:
            st.error(f"Erreur lors de la g√©n√©ration IA : {e}")
    else:
        st.warning("Fournissez une fiche de poste via PDF ou saisie manuelle.")

contenu = st.text_area("Contenu de l'annonce (g√©n√©r√© ou manuel)", key="annonce_contenu", height=300, value=st.session_state.get("annonce_contenu", ""))

if st.button("üíæ Publier l'annonce", type="primary", use_container_width=True, key="btn_publier_annonce"):
    if titre and poste and entreprise and contenu:
        annonce = {
            "date": datetime.now().strftime("%Y-%m-%d %H:%M"),
            "titre": titre,
            "poste": poste,
            "entreprise": entreprise,
            "localisation": localisation_input,
            "contenu": contenu,
            "plateforme": plateforme,
        }
        st.session_state.annonces.append(annonce)
        st.success("‚úÖ Annonce publi√©e avec succ√®s !")
        # Reset pour nouvelle saisie
        st.session_state["annonce_contenu"] = ""
    else:
        st.warning("‚ö†Ô∏è Merci de remplir tous les champs obligatoires")

st.divider()

# -------------------- Liste des annonces --------------------
st.subheader("üìã Annonces publi√©es")

if not st.session_state.annonces:
    st.info("Aucune annonce publi√©e pour le moment.")
else:
    for i, annonce in enumerate(st.session_state.annonces[::-1]):  # affichage derni√®re en premier
        with st.expander(f"{annonce['date']} - {annonce['titre']} ({annonce['poste']}) - {annonce['plateforme']}", expanded=False):
            st.write(f"**Entreprise :** {annonce['entreprise']}")
            st.write(f"**Localisation :** {annonce['localisation'] or 'Non sp√©cifi√©e'}")
            st.write("**Contenu :**")
            st.text_area("Contenu", annonce["contenu"], height=120, key=f"annonce_contenu_{i}", disabled=True)

            col1, col2 = st.columns(2)
            with col1:
                if st.button("üóëÔ∏è Supprimer", key=f"delete_annonce_{i}"):
                    st.session_state.annonces.pop(len(st.session_state.annonces) - 1 - i)
                    st.success("Annonce supprim√©e.")
                    st.rerun()
            with col2:
                st.download_button(
                    "‚¨áÔ∏è Exporter",
                    data=f"Titre: {annonce['titre']}\nPoste: {annonce['poste']}\nEntreprise: {annonce['entreprise']}\nLocalisation: {annonce['localisation']}\nPlateforme: {annonce['plateforme']}\n\n{annonce['contenu']}",
                    file_name=f"annonce_{annonce['poste']}_{i}.txt",
                    mime="text/plain",
                    key=f"download_annonce_{i}"
                )