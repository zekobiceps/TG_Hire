import streamlit as st
import requests
from datetime import datetime
import json

# Configuration de l'outil
st.set_page_config(
    page_title="G√©n√©rateur de Lettres RH - TGCC",
    page_icon="üìù",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Configuration pour l'appel √† l'IA DeepSeek
SYSTEM_PROMPT = """
Tu es un expert en r√©daction de lettres officielles pour les entreprises du BTP au Maroc.
Tu ma√Ætrises parfaitement :
1. Les codes de la correspondance administrative marocaine
2. Le vocabulaire technique du BTP
3. Les protocoles de nomination et d'annonce de recrutement
4. Le ton professionnel et respectueux requis

Tes lettres doivent √™tre :
- Formelles et respectueuses
- Structur√©es selon les normes administratives marocaines
- Adapt√©es au contexte du BTP
- Personnalis√©es selon les informations fournies
"""

def get_deepseek_response(prompt, length="normale"):
    """Appel √† l'API DeepSeek pour g√©n√©ration de lettres"""
    api_key = st.secrets.get("DEEPSEEK_API_KEY")
    if not api_key:
        return {"content": "Erreur: Cl√© API DeepSeek manquante.", "usage": 0}
    
    final_prompt = f"{prompt}\n\n(Instruction: Fournir une r√©ponse de longueur '{length}')"
    messages = [
        {"role": "system", "content": SYSTEM_PROMPT},
        {"role": "user", "content": final_prompt}
    ]
    
    try:
        response = requests.post(
            "https://api.deepseek.com/v1/chat/completions",
            headers={
                "Content-Type": "application/json", 
                "Authorization": f"Bearer {api_key}"
            },
            json={
                "model": "deepseek-chat", 
                "messages": messages, 
                "max_tokens": 2048
            }
        )
        response.raise_for_status()
        data = response.json()
        content = data["choices"][0]["message"]["content"]
        usage = data.get("usage", {}).get("total_tokens", 0)
        
        return {"content": content, "usage": usage}
    except Exception as e:
        return {"content": f"‚ùå Erreur API DeepSeek: {e}", "usage": 0}

# Interface principale
st.title("üìù G√©n√©rateur de Lettres RH - TGCC")
st.markdown("---")

# Sidebar avec les statistiques (simple pour l'instant)
with st.sidebar:
    st.subheader("üìä Statistiques")
    st.metric("üîë Session", 0)
    st.metric("üìä Total", 0)
    st.markdown("---")
    st.info("üí° G√©n√©rateur IA de lettres officielles")

# Choix du type de lettre
type_lettre = st.selectbox(
    "üìã Type de lettre √† g√©n√©rer",
    [
        "Lettre de nomination",
        "Annonce de nouvelle recrue",
        "Lettre de f√©licitations",
        "Communiqu√© interne"
    ],
    help="S√©lectionnez le type de document √† g√©n√©rer"
)

st.markdown("### ‚ÑπÔ∏è Informations du candidat/employ√©")

# Formulaire d'informations organis√© en 2 colonnes
col1, col2 = st.columns(2)

with col1:
    prenom = st.text_input("Pr√©nom", placeholder="Mohamed")
    nom = st.text_input("Nom", placeholder="ALAMI")
    genre = st.selectbox("Genre", ["Monsieur", "Madame"])
    poste = st.text_input("Poste/Fonction", placeholder="Directeur Technique")
    
with col2:
    entreprise = st.selectbox(
        "Entreprise/Filiale", 
        ["TGCC", "TG ALU", "TG COVER", "TG WOOD", "TG STEEL", "TG STONE", "TGEM", "TGCC Immobilier"]
    )
    date_prise_fonction = st.date_input("Date de prise de fonction", datetime.now())
    rattachement = st.text_input("Rattachement", placeholder="Direction G√©n√©rale")
    
    # Upload photo du collaborateur
    photo_collaborateur = st.file_uploader(
        "Photo du collaborateur", 
        type=['jpg', 'jpeg', 'png'],
        help="Photo qui appara√Ætra √† droite de la lettre (comme dans les exemples)"
    )

# Informations compl√©mentaires selon le type de lettre organis√©es en 2 colonnes
st.markdown("### üìÑ D√©tails compl√©mentaires")

if type_lettre == "Lettre de nomination":
    col3, col4 = st.columns(2)
    with col3:
        poste_precedent = st.text_input("Poste pr√©c√©dent (optionnel)", placeholder="Chef de projet")
        departement = st.text_input("D√©partement/Service", placeholder="Direction Technique")
        superviseur = st.text_input("Sup√©rieur hi√©rarchique", placeholder="Directeur G√©n√©ral")
    with col4:
        lieu_travail = st.text_input("Lieu de travail", placeholder="Casablanca - Si√®ge social")
        salaire = st.text_input("Salaire (optionnel)", placeholder="√Ä d√©finir selon grille")
        avantages = st.text_area("Avantages (optionnel)", placeholder="V√©hicule de fonction, frais de mission...")

elif type_lettre == "Annonce de nouvelle recrue":
    col3, col4 = st.columns(2)
    with col3:
        experience = st.text_input("Exp√©rience professionnelle", placeholder="5 ans d'exp√©rience en BTP")
        formation = st.text_input("Formation", placeholder="Ing√©nieur Civil - EHTP")
        competences = st.text_area("Comp√©tences cl√©s", placeholder="Gestion de projet, AutoCAD, Management d'√©quipe")
    with col4:
        projets_precedents = st.text_area("Projets/Entreprises pr√©c√©dents", placeholder="Participation aux projets X, Y, Z")
        certifications = st.text_input("Certifications (optionnel)", placeholder="PMP, AutoCAD certifi√©...")
        langues = st.text_input("Langues", placeholder="Arabe, Fran√ßais, Anglais")

# Fiche de poste (optionnelle pour enrichir la g√©n√©ration)
st.markdown("### üìã Fiche de poste (optionnel - pour enrichissement IA)")

# Deux options : texte ou PDF
tab_text, tab_pdf = st.tabs(["üìù Coller le texte", "üìÑ Uploader PDF"])

fiche_poste = ""

with tab_text:
    fiche_poste = st.text_area(
        "Collez ici la fiche de poste compl√®te:",
        height=150,
        placeholder="Mission: ...\nResponsabilit√©s: ...\nProfil recherch√©: ...\nComp√©tences requises: ...\nExp√©rience: ...\nFormation: ..."
    )

with tab_pdf:
    uploaded_fiche = st.file_uploader(
        "Choisissez votre fichier PDF:",
        type=['pdf'],
        help="La fiche de poste sera analys√©e par l'IA pour enrichir la lettre"
    )
    
    if uploaded_fiche is not None:
        try:
            # Ici on pourrait ajouter l'extraction du texte du PDF
            # Pour l'instant, on affiche juste le nom du fichier
            st.success(f"‚úÖ Fiche de poste charg√©e : {uploaded_fiche.name}")
            fiche_poste = f"[Fiche de poste PDF charg√©e : {uploaded_fiche.name}]"
        except Exception as e:
            st.error(f"‚ùå Erreur lors du chargement du PDF : {e}")

# Param√®tres de g√©n√©ration
st.markdown("### ‚öôÔ∏è Param√®tres de g√©n√©ration")
col5, col6 = st.columns(2)
with col5:
    ton_lettre = st.selectbox("Ton de la lettre", ["Formel", "Chaleureux", "Officiel", "Convivial"])
    longueur = st.selectbox("Longueur", ["Courte", "Normale", "D√©taill√©e"])
with col6:
    inclure_entete_tgcc = st.checkbox("Inclure en-t√™te TGCC", value=True)
    # Signature par d√©faut avec Direction et "TGCC CONSTRUISONS ENSEMBLE"
    st.info("‚ÑπÔ∏è Zone de signature incluse par d√©faut : Direction + TGCC CONSTRUISONS ENSEMBLE")

# Bouton de g√©n√©ration
if st.button("‚ú® G√©n√©rer la lettre", type="primary", use_container_width=True):
    if not prenom or not nom or not poste:
        st.error("‚ö†Ô∏è Veuillez remplir au minimum : Pr√©nom, Nom et Poste")
    else:
        with st.spinner("ü§ñ G√©n√©ration de la lettre en cours..."):
            # Construction du prompt selon le type de lettre
            if type_lettre == "Lettre de nomination":
                prompt = f"""
                G√©n√®re une lettre de nomination officielle avec les informations suivantes :
                
                **Informations personnelles :**
                - {genre} {prenom} {nom.upper()}
                - Nouveau poste : {poste}
                - Entreprise : {entreprise}
                - Date de prise de fonction : {date_prise_fonction.strftime('%d/%m/%Y')}
                - Poste pr√©c√©dent : {poste_precedent if poste_precedent else 'Non sp√©cifi√©'}
                - D√©partement : {departement if departement else 'Non sp√©cifi√©'}
                - Sup√©rieur hi√©rarchique : {superviseur if superviseur else 'Direction'}
                - Lieu de travail : {lieu_travail if lieu_travail else 'Maroc'}
                
                **Fiche de poste :**
                {fiche_poste if fiche_poste else 'Non fournie'}
                
                **Style demand√© :** {ton_lettre}
                
                **Informations r√©sum√© √† inclure dans la lettre :**
                {genre} {prenom} {nom.upper()}
                Poste : {poste}
                Prise de fonction : {date_prise_fonction.strftime('%d/%m/%Y')}
                Rattachement : {rattachement}
                
                G√©n√®re une lettre de nomination compl√®te, structur√©e et professionnelle.
                {'Inclus les coordonn√©es de TGCC en en-t√™te.' if inclure_entete_tgcc else ''}
                Inclus TOUJOURS une zone de signature avec :
                
                Direction
                TGCC CONSTRUISONS ENSEMBLE
                """
                
            elif type_lettre == "Annonce de nouvelle recrue":
                prompt = f"""
                G√©n√®re une annonce de nouvelle recrue avec les informations suivantes :
                
                **Nouveau collaborateur :**
                - {genre} {prenom} {nom.upper()}
                - Poste : {poste}
                - Entreprise : {entreprise}
                - Date d'arriv√©e : {date_prise_fonction.strftime('%d/%m/%Y')}
                - Exp√©rience : {experience if experience else 'Non sp√©cifi√©e'}
                - Formation : {formation if formation else 'Non sp√©cifi√©e'}
                - Comp√©tences : {competences if competences else 'Non sp√©cifi√©es'}
                - Exp√©rience pr√©c√©dente : {projets_precedents if projets_precedents else 'Non sp√©cifi√©e'}
                
                **Fiche de poste :**
                {fiche_poste if fiche_poste else 'Non fournie'}
                
                **Style demand√© :** {ton_lettre}
                
                **Informations r√©sum√© √† inclure dans l'annonce :**
                {genre} {prenom} {nom.upper()}
                Poste : {poste}
                Prise de fonction : {date_prise_fonction.strftime('%d/%m/%Y')}
                Rattachement : {rattachement}
                
                G√©n√®re une annonce interne accueillante et professionnelle pour pr√©senter le nouveau collaborateur.
                {'Inclus les coordonn√©es de TGCC en en-t√™te.' if inclure_entete_tgcc else ''}
                Inclus TOUJOURS une zone de signature avec :
                
                Direction
                TGCC CONSTRUISONS ENSEMBLE
                """
            
            # Appel √† l'IA
            result = get_deepseek_response(prompt, longueur.lower())
            
            if result.get("content") and "Erreur:" not in result["content"]:
                st.markdown("### üìù Lettre g√©n√©r√©e")
                st.markdown("---")
                
                # Affichage avec photo √† droite si disponible
                if photo_collaborateur is not None:
                    col_lettre, col_photo = st.columns([3, 1])
                    with col_lettre:
                        lettre_content = result["content"]
                        st.text_area(
                            "Votre lettre :",
                            value=lettre_content,
                            height=400,
                            help="Vous pouvez copier le contenu et le coller dans Word ou votre √©diteur pr√©f√©r√©"
                        )
                    with col_photo:
                        st.image(photo_collaborateur, caption=f"{prenom} {nom}", width=150)
                        st.markdown("**Position sur le document final :**")
                        st.info("üìç Cette photo sera positionn√©e √† droite de la lettre dans le document final")
                else:
                    # Affichage normal sans photo
                    lettre_content = result["content"]
                    st.text_area(
                        "Votre lettre :",
                        value=lettre_content,
                        height=400,
                        help="Vous pouvez copier le contenu et le coller dans Word ou votre √©diteur pr√©f√©r√©"
                    )
                    st.info("üí° Ajoutez une photo du collaborateur pour un rendu plus professionnel")
                
                # Boutons d'action
                col7, col8, col9 = st.columns(3)
                with col7:
                    st.download_button(
                        label="üì• T√©l√©charger (.txt)",
                        data=lettre_content,
                        file_name=f"lettre_{type_lettre.lower().replace(' ', '_')}_{nom}_{datetime.now().strftime('%Y%m%d')}.txt",
                        mime="text/plain",
                        use_container_width=True
                    )
                
                with col8:
                    if st.button("üîÑ R√©g√©n√©rer", use_container_width=True):
                        st.rerun()
                
                with col9:
                    if st.button("üíæ Sauvegarder mod√®le", use_container_width=True):
                        st.success("‚úÖ Mod√®le sauvegard√© !")
                
                # Statistiques de g√©n√©ration
                st.info(f"üìä Tokens utilis√©s : {result.get('usage', 0)}")
                
            else:
                st.error("‚ùå Erreur lors de la g√©n√©ration de la lettre")
                if result.get("content"):
                    st.error(result["content"])

# Section d'aide
with st.expander("‚ùì Guide d'utilisation", expanded=False):
    st.markdown("""
    ### üìã Comment utiliser cet outil
    
    1. **Choisissez le type de lettre** - Nomination, annonce de recrue, etc.
    2. **Remplissez les informations** - Nom, pr√©nom, poste, entreprise
    3. **Ajoutez les d√©tails** - Selon le type de lettre choisi
    4. **Collez la fiche de poste** (optionnel) - Pour une g√©n√©ration plus pr√©cise
    5. **Configurez les param√®tres** - Ton, longueur, options d'affichage
    6. **G√©n√©rez la lettre** - L'IA cr√©e une lettre personnalis√©e
    7. **T√©l√©chargez ou copiez** - R√©cup√©rez votre document final
    
    ### üí° Conseils pour de meilleurs r√©sultats
    - Remplissez un maximum d'informations
    - Utilisez la fiche de poste pour plus de pr√©cision
    - Choisissez le ton appropri√© √† votre contexte
    - Relisez et ajustez selon vos besoins
    """)