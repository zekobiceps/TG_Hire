import streamlit as st
from utils import *
init_session_state()

st.set_page_config(
    page_title="TG-Hire IA - Assistant Recrutement",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title("üó∫Ô∏è Cartographie de Sourcing")

st.title("üó∫Ô∏è Cartographie de Sourcing")

with st.expander("üìã D√©finition et Utilit√©"):
    st.markdown("""
    **D√©finition**
    
    La cartographie du sourcing est un outil d'aide √† la d√©cision qui permet de classer les postes √† pourvoir selon deux crit√®res :
    
    1. **La disponibilit√© du march√©** (abondant ou p√©nurique)
    2. **La criticit√© du poste** pour nous (non vital ou vital)
    
    Ce croisement donne une matrice 2√ó2 qui oriente imm√©diatement la strat√©gie de recrutement la plus adapt√©e.
    
    **Utilit√© principale**
    
    - Structurer le recrutement : adapter la strat√©gie selon le contexte march√©/criticit√©
    - Gagner du temps : savoir s'il faut privil√©gier le volume ou la pr√©cision
    - Optimiser les ressources : allouer l'effort et les bons canaux au bon type de poste
    - Aider √† la priorisation : identifier les postes strat√©giques
    - Am√©liorer la qualit√© du pipeline : mieux cibler les candidats
    
    **Exemple concret**
    
    - Animateur HSE (non vital / march√© abondant) ‚Üí annonces et ATS, objectif = volume
    - Directeur projets (vital / march√© p√©nurique) ‚Üí chasse et r√©seau, objectif = qualit√© et patience
    """)

st.header("Matrice 2√ó2 de Sourcing")

# Interface pour modifier la matrice
col1, col2 = st.columns(2)

with col1:
    st.subheader("Axes de la matrice")
    st.info("Modifiez les intitul√©s des axes si n√©cessaire")
    
    axe_vertical_haut = st.text_input("Axe vertical (haut):", value="Postes non vitaux")
    axe_vertical_bas = st.text_input("Axe vertical (bas):", value="Postes vitaux")
    axe_horizontal_gauche = st.text_input("Axe horizontal (gauche):", value="March√© abondant")
    axe_horizontal_droite = st.text_input("Axe horizontal (droite):", value="March√© p√©nurique")

with col2:
    st.subheader("Ajouter un poste")
    nouveau_poste = st.text_input("Nouveau poste:", placeholder="Ex: Data Analyst")
    quadrant_choisi = st.selectbox("Quadrant:", list(SOURCING_MATRIX_DATA.keys()))
    
    if st.button("‚ûï Ajouter ce poste") and nouveau_poste:
        if quadrant_choisi in st.session_state.sourcing_matrix_data:
            st.session_state.sourcing_matrix_data[quadrant_choisi]["exemples"].append(nouveau_poste)
            st.success(f"Poste ajout√© au quadrant: {quadrant_choisi}")
            st.rerun()

# Affichage de la matrice
st.markdown("---")
st.subheader("Matrice de Sourcing")

quadrants = list(st.session_state.sourcing_matrix_data.keys())
cols = st.columns(2)

for i, quadrant in enumerate(quadrants):
    with cols[i % 2]:
        with st.expander(f"**{quadrant}**", expanded=True):
            data = st.session_state.sourcing_matrix_data[quadrant]
            
            st.markdown("**Exemples de postes:**")
            for j, poste in enumerate(data["exemples"]):
                col_post, col_del = st.columns([4, 1])
                with col_post:
                    st.write(f"- {poste}")
                with col_del:
                    if st.button("üóëÔ∏è", key=f"del_{quadrant}_{j}"):
                        st.session_state.sourcing_matrix_data[quadrant]["exemples"].pop(j)
                        st.rerun()
            
            st.markdown(f"**Canaux de sourcing:** {data['canaux']}")
            st.markdown(f"**Objectif prioritaire:** {data['objectif']}")

# Option pour r√©initialiser la matrice
if st.button("üîÑ R√©initialiser la matrice aux valeurs par d√©faut"):
    st.session_state.sourcing_matrix_data = SOURCING_MATRIX_DATA
    st.success("Matrice r√©initialis√©e!")
    st.rerun()