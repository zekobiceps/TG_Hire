import streamlit as st
from utils import *
init_session_state()

st.set_page_config(
    page_title="TG-Hire IA - Assistant Recrutement",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.sidebar.success("Choisissez une page ci-dessus.")

# CSS minimal pour le style Kanban (inspir√© GitHub : cartes propres, colonnes nettes)
st.markdown("""
<style>
.kanban-column {
    background-color: #f6f8fa;
    border: 1px solid #e1e4e8;
    border-radius: 6px;
    padding: 8px;
    margin: 8px;
    min-height: 400px;
}
.kanban-card {
    background-color: white;
    border: 1px solid #d0d7de;
    border-radius: 6px;
    padding: 12px;
    margin: 8px 0;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}
.kanban-card h4 {
    margin: 0 0 8px 0;
    color: #24292f;
}
.kanban-card p {
    margin: 0 0 8px 0;
    color: #586069;
    font-size: 14px;
}
.kanban-actions {
    display: flex;
    gap: 4px;
}
</style>
""", unsafe_allow_html=True)

st.divider()
st.header("üöÄ Roadmap des Fonctionnalit√©s")

# Initialisation des donn√©es Kanban dans session_state (persistance)
if "kanban_data" not in st.session_state:
    st.session_state.kanban_data = {
        "√Ä d√©velopper": [
            {"title": "Syst√®me de login avanc√©", "description": "Int√©gration OAuth ou JWT pour multi-utilisateurs.", "status": "√Ä d√©velopper"},
            {"title": "Export CSV des briefs", "description": "G√©n√©ration de rapports pour Excel.", "status": "√Ä d√©velopper"}
        ],
        "En cours de d√©veloppement": [
            {"title": "Base de donn√©es SQLite", "description": "Stockage persistant des briefs avec UI de gestion.", "status": "En cours"}
        ],
        "R√©alis√©": [
            {"title": "Onglets de sourcing (Boolean, X-Ray)", "description": "G√©n√©ration de requ√™tes et liens LinkedIn/Google.", "status": "R√©alis√©"},
            {"title": "G√©n√©rateur InMail", "description": "Messages personnalis√©s avec IA.", "status": "R√©alis√©"}
        ]
    }

# Interface Kanban avec 3 colonnes
col1, col2, col3 = st.columns(3)

def move_card(column_from, column_to, card_title):
    """Fonction pour d√©placer une carte entre colonnes"""
    for card in st.session_state.kanban_data[column_from]:
        if card["title"] == card_title:
            st.session_state.kanban_data[column_from].remove(card)
            card["status"] = "En cours" if column_to == "En cours de d√©veloppement" else column_to
            st.session_state.kanban_data[column_to].append(card)
            st.rerun()
            break

# Colonne 1: √Ä d√©velopper
with col1:
    st.markdown('<div class="kanban-column">', unsafe_allow_html=True)
    st.subheader("üìã √Ä d√©velopper")
    for card in st.session_state.kanban_data["√Ä d√©velopper"]:
        st.markdown(f'<div class="kanban-card">', unsafe_allow_html=True)
        st.markdown(f'<h4>{card["title"]}</h4>', unsafe_allow_html=True)
        st.markdown(f'<p>{card["description"]}</p>', unsafe_allow_html=True)
        col_btn = st.columns(1)
        with col_btn[0]:
            if st.button("‚û°Ô∏è En cours", key=f"move_to_progress_{card['title']}"):
                move_card("√Ä d√©velopper", "En cours de d√©veloppement", card["title"])
        st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

# Colonne 2: En cours de d√©veloppement
with col2:
    st.markdown('<div class="kanban-column">', unsafe_allow_html=True)
    st.subheader("üîÑ En cours de d√©veloppement")
    for card in st.session_state.kanban_data["En cours de d√©veloppement"]:
        st.markdown(f'<div class="kanban-card">', unsafe_allow_html=True)
        st.markdown(f'<h4>{card["title"]}</h4>', unsafe_allow_html=True)
        st.markdown(f'<p>{card["description"]}</p>', unsafe_allow_html=True)
        col_btn = st.columns(2)
        with col_btn[0]:
            if st.button("‚¨ÖÔ∏è √Ä d√©velopper", key=f"move_to_todo_{card['title']}"):
                move_card("En cours de d√©veloppement", "√Ä d√©velopper", card["title"])
        with col_btn[1]:
            if st.button("‚û°Ô∏è R√©alis√©", key=f"move_to_done_{card['title']}"):
                move_card("En cours de d√©veloppement", "R√©alis√©", card["title"])
        st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

# Colonne 3: R√©alis√©
with col3:
    st.markdown('<div class="kanban-column">', unsafe_allow_html=True)
    st.subheader("‚úÖ R√©alis√©")
    for card in st.session_state.kanban_data["R√©alis√©"]:
        st.markdown(f'<div class="kanban-card">', unsafe_allow_html=True)
        st.markdown(f'<h4>{card["title"]}</h4>', unsafe_allow_html=True)
        st.markdown(f'<p>{card["description"]}</p>', unsafe_allow_html=True)
        if st.button("‚¨ÖÔ∏è En cours", key=f"move_back_progress_{card['title']}"):
            move_card("R√©alis√©", "En cours de d√©veloppement", card["title"])
        st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

# Section pour ajouter une nouvelle fonctionnalit√©
st.divider()
st.subheader("‚ûï Ajouter une Nouvelle Fonctionnalit√©")
new_title = st.text_input("Titre de la fonctionnalit√©")
new_description = st.text_area("Description", height=60)
if st.button("Ajouter √† '√Ä d√©velopper'", type="primary"):
    if new_title and new_description:
        st.session_state.kanban_data["√Ä d√©velopper"].append({
            "title": new_title,
            "description": new_description,
            "status": "√Ä d√©velopper"
        })
        st.success("‚úÖ Fonctionnalit√© ajout√©e !")
        st.rerun()
    else:
        st.error("Veuillez remplir le titre et la description.")

# Bouton pour r√©initialiser la roadmap (optionnel)
if st.button("üîÑ R√©initialiser la Roadmap"):
    st.session_state.kanban_data = {
        "√Ä d√©velopper": [
            {"title": "Syst√®me de login avanc√©", "description": "Int√©gration OAuth ou JWT pour multi-utilisateurs.", "status": "√Ä d√©velopper"},
            {"title": "Export CSV des briefs", "description": "G√©n√©ration de rapports pour Excel.", "status": "√Ä d√©velopper"}
        ],
        "En cours de d√©veloppement": [
            {"title": "Base de donn√©es SQLite", "description": "Stockage persistant des briefs avec UI de gestion.", "status": "En cours"}
        ],
        "R√©alis√©": [
            {"title": "Onglets de sourcing (Boolean, X-Ray)", "description": "G√©n√©ration de requ√™tes et liens LinkedIn/Google.", "status": "R√©alis√©"},
            {"title": "G√©n√©rateur InMail", "description": "Messages personnalis√©s avec IA.", "status": "R√©alis√©"}
        ]
    }
    st.rerun()

# Footer
st.divider()
st.caption("ü§ñ TG-Hire IA | Version 1")