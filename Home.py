import streamlit as st
from utils import *
from datetime import datetime

# Initialisation de l'√©tat de session
init_session_state()

# Stockage temporaire des utilisateurs (√† remplacer par une base s√©curis√©e)
USERS = {
    "user1@example.com": "password123",
    "user2@example.com": "securepass"
}

# V√©rification de l'√©tat de connexion
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False

# Page de login
if not st.session_state.logged_in:
    st.set_page_config(
        page_title="TG-Hire IA - Assistant Recrutement",
        page_icon="ü§ñ",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    st.title("ü§ñ TG-Hire IA - Assistant Recrutement")
    st.write("Veuillez vous connecter pour acc√©der √† l'outil.")
    
    email = st.text_input("Adresse Email", key="login_email")
    password = st.text_input("Mot de Passe", type="password", key="login_password")
    
    if st.button("Se Connecter"):
        if email in USERS and USERS[email] == password:
            st.session_state.logged_in = True
            st.success("Connexion r√©ussie !")
            st.rerun()
        else:
            st.error("Email ou mot de passe incorrect.")
else:
    # Page d'accueil apr√®s connexion
    st.set_page_config(
        page_title="TG-Hire IA - Assistant Recrutement",
        page_icon="ü§ñ",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    st.title("ü§ñ TG-Hire IA - Assistant Recrutement")
    st.write("Bienvenue dans votre assistant de recrutement.")

    st.sidebar.success("Choisissez une page ci-dessus.")

    # --- TABLEAU KANBAN DES FONCTIONNALIT√âS ---
    st.markdown("---")
    st.subheader("üìä Tableau de Bord des Fonctionnalit√©s")
    
    # D√©finition des fonctionnalit√©s
    features = {
        "√Ä d√©velopper": [
            "Int√©gration avec LinkedIn API",
            "Syst√®me de notifications en temps r√©el",
            "Analyse de sentiment des entretiens",
            "Tableau de bord analytics avanc√©",
            "Export automatique vers ATS"
        ],
        "En cours": [
            "Optimisation de l'IA de matching",
            "Interface mobile responsive",
            "Synchronisation cloud"
        ],
        "R√©alis√©": [
            "Syst√®me d'authentification",
            "Analyse basique de CV",
            "Classement par similarit√© cosinus",
            "Export PDF/Word des briefs",
            "Matrice KSA interactive"
        ]
    }
    
    # Cr√©ation des colonnes Kanban
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("### üìã √Ä d√©velopper")
        st.markdown("---")
        for feature in features["√Ä d√©velopper"]:
            with st.container():
                st.markdown(f"""
                <div style="
                    background: #ffebee; 
                    padding: 10px; 
                    border-radius: 5px; 
                    margin: 5px 0; 
                    border-left: 4px solid #f44336;
                ">
                üìå {feature}
                </div>
                """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("### üîÑ En cours")
        st.markdown("---")
        for feature in features["En cours"]:
            with st.container():
                st.markdown(f"""
                <div style="
                    background: #fff3e0; 
                    padding: 10px; 
                    border-radius: 5px; 
                    margin: 5px 0; 
                    border-left: 4px solid #ff9800;
                ">
                ‚ö° {feature}
                </div>
                """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("### ‚úÖ R√©alis√©")
        st.markdown("---")
        for feature in features["R√©alis√©"]:
            with st.container():
                st.markdown(f"""
                <div style="
                    background: #e8f5e8; 
                    padding: 10px; 
                    border-radius: 5px; 
                    margin: 5px 0; 
                    border-left: 4px solid #4caf50;
                ">
                ‚úÖ {feature}
                </div>
                """, unsafe_allow_html=True)
    
    # Statistiques rapides
    st.markdown("---")
    col_stats1, col_stats2, col_stats3 = st.columns(3)
    
    with col_stats1:
        st.metric("Fonctionnalit√©s totales", 
                 len(features["√Ä d√©velopper"]) + len(features["En cours"]) + len(features["R√©alis√©"]))
    
    with col_stats2:
        st.metric("Taux de r√©alisation", 
                 f"{(len(features['R√©alis√©']) / (len(features['√Ä d√©velopper']) + len(features['En cours']) + len(features['R√©alis√©'])) * 100):.1f}%")
    
    with col_stats3:
        st.metric("En d√©veloppement", len(features["En cours"]))
    
    st.divider()
    st.caption("ü§ñ TG-Hire IA | Made with ‚ù§Ô∏è")

    # Bouton de d√©connexion dans la sidebar
    if st.sidebar.button("D√©connexion"):
        st.session_state.logged_in = False
        st.rerun()

    # Prot√©ger les pages dans pages/ (arr√™te l'ex√©cution si non connect√©)
    if not st.session_state.logged_in:
        st.stop()